name: Provisioning Infra - Build and Push Docker Images

on:
  push:
    branches:
      - ci-cd
  workflow_dispatch:

jobs:
  # terraform:
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.6.0

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}

  #     - name: terraform destroy
  #       run: |
  #           terraform init -reconfigure
  #       working-directory: ./Terraform

  #     # - name: Terraform Init
  #     #   run: terraform -chdir=./Terraform init 

  #     - name: Terraform Validate
  #       run: terraform -chdir=./Terraform validate

  #     - name: Terraform Plan
  #       run: terraform -chdir=./Terraform plan -var-file=terraform.tfvars

  #     - name: Terraform Apply
  #       run: terraform -chdir=./Terraform apply -auto-approve -var-file=terraform.tfvars

  unit_testing: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (phantomjs, curl, bash)
        run: |
          sudo apt-get update
          sudo apt-get install -y phantomjs curl
          
      - name: Give execute permission for test script
        run: chmod +x ./result/tests/tests.sh

      - name: Run result service tests
        run: ./tests.sh
        working-directory: ./result/tests


  docker:
    needs: [unit_testing]
    runs-on: ubuntu-latest
    environment: dev
    strategy:
      matrix:
        service: [vote, result, worker]  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
      - name: Build and Push ${{ matrix.service }}
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest ./${{ matrix.service }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
